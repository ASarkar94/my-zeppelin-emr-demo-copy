{
  "paragraphs": [
    {
      "title": "Zeppelin Demo Notebook 2",
      "text": "%md\nDemonstrate loading, querying, visualizing, and saving the GroupLens MovieLens Latest Datasets.\nThe latest datasets are available to download on [GroupLens](https://grouplens.org/datasets/movielens/).\n\nMovieLens Datasets Specifications:\n- Small: __100,000__ ratings and 3,600 tag applications applied to 9,000 movies by 600 users. Last updated 9/2018.\n- Full: __27,000,000__ ratings and 1,100,000 tag applications applied to 58,000 movies by 280,000 users. Includes tag genome data with 14 million relevance scores across 1,100 tags. Last updated 9/2018.",
      "user": "anonymous",
      "dateUpdated": "2019-11-12 03:09:50.349",
      "config": {
        "tableHide": false,
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/markdown",
        "fontSize": 9.0,
        "editorHide": true,
        "title": true,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003cdiv class\u003d\"markdown-body\"\u003e\n\u003cp\u003eDemonstrate loading, querying, visualizing, and saving the GroupLens MovieLens Latest Datasets.\u003cbr/\u003eThe latest datasets are available to download on \u003ca href\u003d\"https://grouplens.org/datasets/movielens/\"\u003eGroupLens\u003c/a\u003e.\u003c/p\u003e\n\u003cp\u003eMovieLens Datasets Specifications:\u003cbr/\u003e- Small: \u003cstrong\u003e100,000\u003c/strong\u003e ratings and 3,600 tag applications applied to 9,000 movies by 600 users. Last updated 9/2018.\u003cbr/\u003e- Full: \u003cstrong\u003e27,000,000\u003c/strong\u003e ratings and 1,100,000 tag applications applied to 58,000 movies by 280,000 users. Includes tag genome data with 14 million relevance scores across 1,100 tags. Last updated 9/2018.\u003c/p\u003e\n\u003c/div\u003e"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1573161585787_1398568692",
      "id": "20191106-153644_419077851",
      "dateCreated": "2019-11-07 21:19:45.788",
      "dateStarted": "2019-11-12 03:09:50.363",
      "dateFinished": "2019-11-12 03:09:50.370",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "title": "Confirm PySpark is using Python3",
      "text": "%sh\n# https://aws.amazon.com/premiumsupport/knowledge-center/emr-pyspark-python-3x/\npyspark --version\npython3 --version",
      "user": "anonymous",
      "dateUpdated": "2019-11-12 03:09:50.463",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "sh",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "editorMode": "ace/mode/sh",
        "title": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "Welcome to\n      ____              __\n     / __/__  ___ _____/ /__\n    _\\ \\/ _ \\/ _ `/ __/  \u0027_/\n   /___/ .__/\\_,_/_/ /_/\\_\\   version 2.4.4\n      /_/\n                        \nUsing Scala version 2.11.12, OpenJDK 64-Bit Server VM, 1.8.0_222\nBranch HEAD\nCompiled by user ec2-user on 2019-09-10T23:04:45Z\nRevision 082e98ac708024722b9a71933768ecad2e086acc\nUrl git@aws157git.com:/pkg/Aws157BigTop\nType --help for more information.\nPython 3.6.8\n"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1573397927936_476746870",
      "id": "20191110-145847_274927668",
      "dateCreated": "2019-11-10 14:58:47.936",
      "dateStarted": "2019-11-12 03:09:50.475",
      "dateFinished": "2019-11-12 03:09:51.300",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "title": "Import Python Packages",
      "text": "%spark.pyspark\nfrom pyspark import SparkFiles\nfrom pyspark.sql import SparkSession\nfrom pyspark.sql.types import StructType, StructField, StringType, IntegerType, DateType",
      "user": "anonymous",
      "dateUpdated": "2019-11-12 03:09:51.375",
      "config": {
        "lineNumbers": true,
        "tableHide": false,
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "selectedInterpreter": {
          "name": "spark.pyspark",
          "profile": "pyspark",
          "isCustom": false,
          "editorLanguage": "python",
          "className": "org.apache.zeppelin.spark.PySparkInterpreter",
          "isDefault": false
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/python",
        "fontSize": 9.0,
        "editorHide": false,
        "title": true,
        "results": [
          {
            "graph": {
              "mode": "table",
              "height": 300.0,
              "optionOpen": false
            }
          }
        ],
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": []
      },
      "apps": [],
      "jobName": "paragraph_1573161585794_-369410071",
      "id": "20191009-042517_1466963465",
      "dateCreated": "2019-11-07 21:19:45.794",
      "dateStarted": "2019-11-12 03:09:51.387",
      "dateFinished": "2019-11-12 03:09:51.391",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "title": "Create Spark Session",
      "text": "%spark.pyspark\nspark \u003d SparkSession \\\n    .builder \\\n    .appName(\"pyspark_demo_app\") \\\n    .getOrCreate()\n\n# spark.sparkContext.getConf().getAll()",
      "user": "anonymous",
      "dateUpdated": "2019-11-12 03:09:51.486",
      "config": {
        "lineNumbers": true,
        "tableHide": false,
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "selectedInterpreter": {
          "name": "spark.pyspark",
          "profile": "pyspark",
          "isCustom": false,
          "editorLanguage": "python",
          "className": "org.apache.zeppelin.spark.PySparkInterpreter",
          "isDefault": false
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/python",
        "fontSize": 9.0,
        "editorHide": false,
        "title": true,
        "results": [
          {
            "graph": {
              "mode": "table",
              "height": 300.0,
              "optionOpen": false
            }
          }
        ],
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": []
      },
      "apps": [],
      "jobName": "paragraph_1573161585794_630658218",
      "id": "20191009-042751_2109019779",
      "dateCreated": "2019-11-07 21:19:45.795",
      "dateStarted": "2019-11-12 03:09:51.499",
      "dateFinished": "2019-11-12 03:09:51.507",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "title": "Load MovieLens Data from GroupLens",
      "text": "%sh\n# choices: or ml-latest-small (100k) or ml-latest (27MM)\nDIR\u003d\"ml-latest-small\"\nif [ -d $DIR ]; then\n    echo \"$DIR exist\"\nelse \n    wget -nv http://files.grouplens.org/datasets/movielens/$DIR.zip -O $DIR.zip \u0026\u0026 unzip $DIR.zip\nfi\n\nls -alh $DIR\n\n# copy from local file system (/var/lib/zeppelin) to the destination file system (/user/zeppelin)\nhadoop fs -put -f  $DIR/movies.csv $DIR/ratings.csv .\nhadoop fs -ls -h .",
      "user": "anonymous",
      "dateUpdated": "2019-11-12 03:09:51.598",
      "config": {
        "lineNumbers": true,
        "tableHide": false,
        "editorSetting": {
          "language": "sh",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "selectedInterpreter": {
          "name": "python",
          "profile": "python",
          "isCustom": false,
          "editorLanguage": "python",
          "className": "org.apache.zeppelin.python.PythonInterpreter",
          "isDefault": false
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/sh",
        "fontSize": 9.0,
        "editorHide": false,
        "title": true,
        "results": [
          {
            "graph": {
              "mode": "table",
              "height": 300.0,
              "optionOpen": false
            }
          }
        ],
        "enabled": true
      },
      "settings": {
        "params": {
          "HADOOP_HOME": ""
        },
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "ml-latest-small exist\ntotal 3.2M\ndrwxr-xr-x 2 zeppelin zeppelin   94 Sep 26  2018 .\ndrwxr-xr-x 6 zeppelin zeppelin  200 Nov 12 03:01 ..\n-rw-r--r-- 1 zeppelin zeppelin 194K Sep 26  2018 links.csv\n-rw-r--r-- 1 zeppelin zeppelin 483K Sep 26  2018 movies.csv\n-rw-r--r-- 1 zeppelin zeppelin 2.4M Sep 26  2018 ratings.csv\n-rw-r--r-- 1 zeppelin zeppelin 8.2K Sep 26  2018 README.txt\n-rw-r--r-- 1 zeppelin zeppelin 116K Sep 26  2018 tags.csv\nFound 3 items\ndrwxr-xr-x   - zeppelin hadoop          0 2019-11-12 02:16 .sparkStaging\n-rw-r--r--   1 zeppelin hadoop    482.8 K 2019-11-12 03:09 movies.csv\n-rw-r--r--   1 zeppelin hadoop      2.4 M 2019-11-12 03:09 ratings.csv\n"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1573161585795_2012219506",
      "id": "20191009-042907_1768707497",
      "dateCreated": "2019-11-07 21:19:45.795",
      "dateStarted": "2019-11-12 03:09:51.615",
      "dateFinished": "2019-11-12 03:09:55.548",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "title": "Load CSV Data into DataFrame",
      "text": "%spark.pyspark\nratingsDF \u003d spark.read \\\n    .format(\"csv\") \\\n    .option(\"header\", \"true\") \\\n    .option(\"delimiter\", \",\") \\\n    .option(\"inferSchema\", \"true\") \\\n    .load(\"ratings.csv\")\n\nprint(\"DataFrame rows: %d\" % ratingsDF.count())\nprint(\"DataFrame schema: %s\" % ratingsDF)\nratingsDF.show(10, False)",
      "user": "anonymous",
      "dateUpdated": "2019-11-12 03:09:55.620",
      "config": {
        "lineNumbers": true,
        "tableHide": false,
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "selectedInterpreter": {
          "name": "spark.pyspark",
          "profile": "pyspark",
          "isCustom": false,
          "editorLanguage": "python",
          "className": "org.apache.zeppelin.spark.PySparkInterpreter",
          "isDefault": false
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/python",
        "fontSize": 9.0,
        "editorHide": false,
        "title": true,
        "results": [
          {
            "graph": {
              "mode": "table",
              "height": 355.0,
              "optionOpen": false
            }
          }
        ],
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "DataFrame rows: 100836\nDataFrame schema: DataFrame[userId: int, movieId: int, rating: double, timestamp: int]\n+------+-------+------+---------+\n|userId|movieId|rating|timestamp|\n+------+-------+------+---------+\n|1     |1      |4.0   |964982703|\n|1     |3      |4.0   |964981247|\n|1     |6      |4.0   |964982224|\n|1     |47     |5.0   |964983815|\n|1     |50     |5.0   |964982931|\n|1     |70     |3.0   |964982400|\n|1     |101    |5.0   |964980868|\n|1     |110    |4.0   |964982176|\n|1     |151    |5.0   |964984041|\n|1     |157    |5.0   |964984100|\n+------+-------+------+---------+\nonly showing top 10 rows\n\n"
          }
        ]
      },
      "runtimeInfos": {
        "jobUrl": {
          "propertyName": "jobUrl",
          "label": "SPARK JOB",
          "tooltip": "View in Spark web UI",
          "group": "spark",
          "values": [
            "http://ip-172-31-2-21.ec2.internal:4040/jobs/job?id\u003d171",
            "http://ip-172-31-2-21.ec2.internal:4040/jobs/job?id\u003d172",
            "http://ip-172-31-2-21.ec2.internal:4040/jobs/job?id\u003d173",
            "http://ip-172-31-2-21.ec2.internal:4040/jobs/job?id\u003d174"
          ],
          "interpreterSettingId": "spark"
        }
      },
      "apps": [],
      "jobName": "paragraph_1573161585796_1293011902",
      "id": "20191009-044129_2035687603",
      "dateCreated": "2019-11-07 21:19:45.796",
      "dateStarted": "2019-11-12 03:09:55.632",
      "dateFinished": "2019-11-12 03:10:06.254",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "title": "Load CSV Data into DataFrame",
      "text": "%spark.pyspark\nmoviesDF \u003d spark.read \\\n    .format(\"csv\") \\\n    .option(\"header\", \"true\") \\\n    .option(\"delimiter\", \",\") \\\n    .option(\"inferSchema\", \"true\") \\\n    .load(\"movies.csv\")\n\nprint(\"DataFrame rows: %d\" % moviesDF.count())\nprint(\"DataFrame schema: %s\" % moviesDF)\nmoviesDF.show(10, False)",
      "user": "anonymous",
      "dateUpdated": "2019-11-12 03:10:06.351",
      "config": {
        "lineNumbers": true,
        "tableHide": false,
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "selectedInterpreter": {
          "name": "spark.pyspark",
          "profile": "pyspark",
          "isCustom": false,
          "editorLanguage": "python",
          "className": "org.apache.zeppelin.spark.PySparkInterpreter",
          "isDefault": false
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/python",
        "fontSize": 9.0,
        "editorHide": false,
        "title": true,
        "results": [
          {
            "graph": {
              "mode": "table",
              "height": 300.0,
              "optionOpen": false
            }
          }
        ],
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "DataFrame rows: 9742\nDataFrame schema: DataFrame[movieId: int, title: string, genres: string]\n+-------+----------------------------------+-------------------------------------------+\n|movieId|title                             |genres                                     |\n+-------+----------------------------------+-------------------------------------------+\n|1      |Toy Story (1995)                  |Adventure|Animation|Children|Comedy|Fantasy|\n|2      |Jumanji (1995)                    |Adventure|Children|Fantasy                 |\n|3      |Grumpier Old Men (1995)           |Comedy|Romance                             |\n|4      |Waiting to Exhale (1995)          |Comedy|Drama|Romance                       |\n|5      |Father of the Bride Part II (1995)|Comedy                                     |\n|6      |Heat (1995)                       |Action|Crime|Thriller                      |\n|7      |Sabrina (1995)                    |Comedy|Romance                             |\n|8      |Tom and Huck (1995)               |Adventure|Children                         |\n|9      |Sudden Death (1995)               |Action                                     |\n|10     |GoldenEye (1995)                  |Action|Adventure|Thriller                  |\n+-------+----------------------------------+-------------------------------------------+\nonly showing top 10 rows\n\n"
          }
        ]
      },
      "runtimeInfos": {
        "jobUrl": {
          "propertyName": "jobUrl",
          "label": "SPARK JOB",
          "tooltip": "View in Spark web UI",
          "group": "spark",
          "values": [
            "http://ip-172-31-2-21.ec2.internal:4040/jobs/job?id\u003d175",
            "http://ip-172-31-2-21.ec2.internal:4040/jobs/job?id\u003d176",
            "http://ip-172-31-2-21.ec2.internal:4040/jobs/job?id\u003d177",
            "http://ip-172-31-2-21.ec2.internal:4040/jobs/job?id\u003d178"
          ],
          "interpreterSettingId": "spark"
        }
      },
      "apps": [],
      "jobName": "paragraph_1573170957319_-724857282",
      "id": "20191107-235557_158160591",
      "dateCreated": "2019-11-07 23:55:57.319",
      "dateStarted": "2019-11-12 03:10:06.363",
      "dateFinished": "2019-11-12 03:10:07.013",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "title": "Save Data in Parquet-format to S3",
      "text": "%spark.pyspark\n# change me\nDATA_BUCKET\u003d\"gstafford-aws-emr-notebooks\"\n\nBUCKET_PATH\u003d\"s3://\" + DATA_BUCKET + \"/output/\"\nratingsDF.write.parquet(BUCKET_PATH + \"ratings.parquet\", mode\u003d\"overwrite\")\nmoviesDF.write.parquet(BUCKET_PATH + \"movies.parquet\", mode\u003d\"overwrite\")\n",
      "user": "anonymous",
      "dateUpdated": "2019-11-12 03:10:07.063",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/python",
        "title": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": []
      },
      "runtimeInfos": {
        "jobUrl": {
          "propertyName": "jobUrl",
          "label": "SPARK JOB",
          "tooltip": "View in Spark web UI",
          "group": "spark",
          "values": [
            "http://ip-172-31-2-21.ec2.internal:4040/jobs/job?id\u003d179",
            "http://ip-172-31-2-21.ec2.internal:4040/jobs/job?id\u003d180"
          ],
          "interpreterSettingId": "spark"
        }
      },
      "apps": [],
      "jobName": "paragraph_1573364755638_1580655931",
      "id": "20191110-054555_1490759128",
      "dateCreated": "2019-11-10 05:45:55.638",
      "dateStarted": "2019-11-12 03:10:07.080",
      "dateFinished": "2019-11-12 03:10:10.372",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "title": "Load Parquet-format Data from S3",
      "text": "%spark.pyspark\nratingsDF \u003d spark.read.parquet(BUCKET_PATH + \"ratings.parquet\")\nprint(\"DataFrame rows: %d\" % ratingsDF.count())",
      "user": "anonymous",
      "dateUpdated": "2019-11-12 03:10:10.382",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/python",
        "title": true,
        "editorHide": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "DataFrame rows: 100836\n"
          }
        ]
      },
      "runtimeInfos": {
        "jobUrl": {
          "propertyName": "jobUrl",
          "label": "SPARK JOB",
          "tooltip": "View in Spark web UI",
          "group": "spark",
          "values": [
            "http://ip-172-31-2-21.ec2.internal:4040/jobs/job?id\u003d181",
            "http://ip-172-31-2-21.ec2.internal:4040/jobs/job?id\u003d182"
          ],
          "interpreterSettingId": "spark"
        }
      },
      "apps": [],
      "jobName": "paragraph_1573517924706_797063234",
      "id": "20191112-001844_87079831",
      "dateCreated": "2019-11-12 00:18:44.706",
      "dateStarted": "2019-11-12 03:10:10.394",
      "dateFinished": "2019-11-12 03:10:11.306",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "title": "Load Parquet-format Data from S3",
      "text": "%spark.pyspark\nmoviesDF \u003d spark.read.parquet(BUCKET_PATH + \"movies.parquet\")\nprint(\"DataFrame rows: %d\" % moviesDF.count())",
      "user": "anonymous",
      "dateUpdated": "2019-11-12 03:10:11.394",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/python",
        "title": true,
        "editorHide": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "DataFrame rows: 9742\n"
          }
        ]
      },
      "runtimeInfos": {
        "jobUrl": {
          "propertyName": "jobUrl",
          "label": "SPARK JOB",
          "tooltip": "View in Spark web UI",
          "group": "spark",
          "values": [
            "http://ip-172-31-2-21.ec2.internal:4040/jobs/job?id\u003d183",
            "http://ip-172-31-2-21.ec2.internal:4040/jobs/job?id\u003d184"
          ],
          "interpreterSettingId": "spark"
        }
      },
      "apps": [],
      "jobName": "paragraph_1573528048880_1044998074",
      "id": "20191112-030728_1238589766",
      "dateCreated": "2019-11-12 03:07:28.880",
      "dateStarted": "2019-11-12 03:10:11.406",
      "dateFinished": "2019-11-12 03:10:12.097",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "title": "Create Temporary View of Ratings Data and Query",
      "text": "%spark.pyspark\n\nratingsDF.createOrReplaceTempView(\"ratings\")\n\nratingsDF \u003d spark.sql(\"SELECT movieId, rating, userId, CAST(timestamp as timestamp) as dateTime \" +\n                      \"FROM ratings \" +\n                      \"ORDER BY movieId, rating, userId\")\n\nprint(\"DataFrame rows: %d\" % ratingsDF.count())\nratingsDF.show(10, False)",
      "user": "anonymous",
      "dateUpdated": "2019-11-12 03:10:12.106",
      "config": {
        "lineNumbers": true,
        "tableHide": false,
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "selectedInterpreter": {
          "name": "spark.pyspark",
          "profile": "pyspark",
          "isCustom": false,
          "editorLanguage": "python",
          "className": "org.apache.zeppelin.spark.PySparkInterpreter",
          "isDefault": false
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/python",
        "fontSize": 9.0,
        "editorHide": false,
        "title": true,
        "results": [
          {
            "graph": {
              "mode": "table",
              "height": 300.0,
              "optionOpen": false
            }
          }
        ],
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "DataFrame rows: 100836\n+-------+------+------+-------------------+\n|movieId|rating|userId|dateTime           |\n+-------+------+------+-------------------+\n|1      |0.5   |76    |2015-08-10 00:12:28|\n|1      |1.5   |462   |2006-07-27 22:00:53|\n|1      |2.0   |132   |2006-09-10 20:56:25|\n|1      |2.0   |153   |2018-05-05 19:30:42|\n|1      |2.0   |193   |2015-07-02 17:08:10|\n|1      |2.0   |266   |1999-12-20 05:59:02|\n|1      |2.0   |298   |2015-11-14 16:24:17|\n|1      |2.0   |412   |1999-10-05 09:05:53|\n|1      |2.5   |15    |2017-11-13 12:59:30|\n|1      |2.5   |68    |2006-09-17 22:17:06|\n+-------+------+------+-------------------+\nonly showing top 10 rows\n\n"
          }
        ]
      },
      "runtimeInfos": {
        "jobUrl": {
          "propertyName": "jobUrl",
          "label": "SPARK JOB",
          "tooltip": "View in Spark web UI",
          "group": "spark",
          "values": [
            "http://ip-172-31-2-21.ec2.internal:4040/jobs/job?id\u003d185",
            "http://ip-172-31-2-21.ec2.internal:4040/jobs/job?id\u003d186",
            "http://ip-172-31-2-21.ec2.internal:4040/jobs/job?id\u003d187"
          ],
          "interpreterSettingId": "spark"
        }
      },
      "apps": [],
      "jobName": "paragraph_1573161585796_891183216",
      "id": "20191009-050109_648011188",
      "dateCreated": "2019-11-07 21:19:45.797",
      "dateStarted": "2019-11-12 03:10:12.124",
      "dateFinished": "2019-11-12 03:10:16.300",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "title": "Replace Temporary View with New Query",
      "text": "%spark.pyspark\nratingsDF.createOrReplaceTempView(\"ratings\")\nmoviesDF.createOrReplaceTempView(\"movies\")\n\ntopMoviesDF \u003d spark.sql(\"SELECT m.title, AVG(r.rating) as avg_rating, COUNT(r.rating) as cnt_ratings \" +\n                        \"FROM ratings r \" +\n                        \"JOIN movies m ON (r.movieId \u003d m.movieId) \" +\n                        \"GROUP BY m.title \" +\n                        \"ORDER BY avg_rating DESC, cnt_ratings DESC, m.title ASC\")\n                        \n# topMoviesDF \u003d topMoviesDF.filter(topMoviesDF.cnt_ratings \u003e\u003d 25)\n\nprint(\"DataFrame rows: %d\" % moviesDF.count())\nprint(\"Top 10 Movies\")\ntopMoviesDF.show(10, False)\n",
      "user": "anonymous",
      "dateUpdated": "2019-11-12 03:10:16.331",
      "config": {
        "lineNumbers": true,
        "tableHide": false,
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "selectedInterpreter": {
          "name": "spark.pyspark",
          "profile": "pyspark",
          "isCustom": false,
          "editorLanguage": "python",
          "className": "org.apache.zeppelin.spark.PySparkInterpreter",
          "isDefault": false
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/python",
        "fontSize": 9.0,
        "editorHide": false,
        "title": true,
        "results": [
          {
            "graph": {
              "mode": "table",
              "height": 300.0,
              "optionOpen": false
            }
          }
        ],
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "DataFrame rows: 9742\nTop 10 Movies\n+---------------------------------------------------------------------------------+----------+-----------+\n|title                                                                            |avg_rating|cnt_ratings|\n+---------------------------------------------------------------------------------+----------+-----------+\n|Belle époque (1992)                                                              |5.0       |2          |\n|Come and See (Idi i smotri) (1985)                                               |5.0       |2          |\n|Enter the Void (2009)                                                            |5.0       |2          |\n|Heidi Fleiss: Hollywood Madam (1995)                                             |5.0       |2          |\n|Jonah Who Will Be 25 in the Year 2000 (Jonas qui aura 25 ans en l\u0027an 2000) (1976)|5.0       |2          |\n|Lamerica (1994)                                                                  |5.0       |2          |\n|Lesson Faust (1994)                                                              |5.0       |2          |\n|\u0027Salem\u0027s Lot (2004)                                                              |5.0       |1          |\n|12 Angry Men (1997)                                                              |5.0       |1          |\n|12 Chairs (1976)                                                                 |5.0       |1          |\n+---------------------------------------------------------------------------------+----------+-----------+\nonly showing top 10 rows\n\n"
          }
        ]
      },
      "runtimeInfos": {
        "jobUrl": {
          "propertyName": "jobUrl",
          "label": "SPARK JOB",
          "tooltip": "View in Spark web UI",
          "group": "spark",
          "values": [
            "http://ip-172-31-2-21.ec2.internal:4040/jobs/job?id\u003d188",
            "http://ip-172-31-2-21.ec2.internal:4040/jobs/job?id\u003d189",
            "http://ip-172-31-2-21.ec2.internal:4040/jobs/job?id\u003d190",
            "http://ip-172-31-2-21.ec2.internal:4040/jobs/job?id\u003d191"
          ],
          "interpreterSettingId": "spark"
        }
      },
      "apps": [],
      "jobName": "paragraph_1573161585797_-394721398",
      "id": "20191009-050155_2142326603",
      "dateCreated": "2019-11-07 21:19:45.797",
      "dateStarted": "2019-11-12 03:10:16.368",
      "dateFinished": "2019-11-12 03:10:27.780",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "title": "Native Zeppelin Visualization Based on SQL Query",
      "text": "%sql\nWITH tmp_table AS (\n    SELECT m.title, AVG(r.rating) as avg_rating, COUNT(r.rating) as cnt_ratings\n    FROM ratings r\n    JOIN movies m ON (r.movieId \u003d m.movieId)\n    GROUP BY m.title)\n    \nSELECT title, CAST(avg_rating AS DECIMAL(38,2)), cnt_ratings\nFROM tmp_table\nWHERE avg_rating \u003e\u003d ${avgRatingMin\u003d4} AND cnt_ratings \u003e\u003d ${RatingsMin\u003d2}\nORDER BY avg_rating ASC, cnt_ratings DESC, title ASC\nLIMIT 25",
      "user": "anonymous",
      "dateUpdated": "2019-11-12 03:10:35.394",
      "config": {
        "lineNumbers": true,
        "tableHide": false,
        "editorSetting": {
          "language": "sql",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/sql",
        "fontSize": 9.0,
        "editorHide": false,
        "title": true,
        "results": {
          "0": {
            "graph": {
              "mode": "multiBarChart",
              "height": 419.641,
              "optionOpen": false,
              "setting": {
                "table": {
                  "tableGridState": {},
                  "tableColumnTypeState": {
                    "names": {
                      "title": "string",
                      "avg_rating": "string",
                      "ratings": "string"
                    },
                    "updated": false
                  },
                  "tableOptionSpecHash": "[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]",
                  "tableOptionValue": {
                    "useFilter": false,
                    "showPagination": false,
                    "showAggregationFooter": false
                  },
                  "updated": false,
                  "initialized": false
                },
                "multiBarChart": {
                  "rotate": {
                    "degree": "-45"
                  },
                  "xLabelStatus": "default",
                  "stacked": true
                },
                "stackedAreaChart": {
                  "rotate": {
                    "degree": "-45"
                  },
                  "xLabelStatus": "default"
                },
                "lineChart": {
                  "rotate": {
                    "degree": "-45"
                  },
                  "xLabelStatus": "default"
                },
                "pieChart": {},
                "scatterChart": {
                  "yAxis": {
                    "name": "avg_rating",
                    "index": 1.0,
                    "aggr": "sum"
                  },
                  "xAxis": {
                    "name": "cnt_ratings",
                    "index": 2.0,
                    "aggr": "sum"
                  },
                  "group": {
                    "name": "title",
                    "index": 0.0,
                    "aggr": "sum"
                  }
                }
              },
              "keys": [
                {
                  "name": "avg_rating",
                  "index": 1.0,
                  "aggr": "sum"
                }
              ],
              "groups": [
                {
                  "name": "title",
                  "index": 0.0,
                  "aggr": "sum"
                }
              ],
              "values": [
                {
                  "name": "cnt_ratings",
                  "index": 2.0,
                  "aggr": "sum"
                }
              ],
              "commonSetting": {}
            },
            "helium": {}
          },
          "1": {
            "graph": {
              "mode": "table",
              "height": 86.0,
              "optionOpen": false
            }
          }
        },
        "enabled": true
      },
      "settings": {
        "params": {
          "avgRating": "4",
          "avgRatingMin": "4",
          "ratingMin": "2",
          "RatingsMin": "100"
        },
        "forms": {
          "avgRatingMin": {
            "type": "TextBox",
            "name": "avgRatingMin",
            "defaultValue": "4",
            "hidden": false
          },
          "RatingsMin": {
            "type": "TextBox",
            "name": "RatingsMin",
            "defaultValue": "2",
            "hidden": false
          }
        }
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TABLE",
            "data": "title\tavg_rating\tcnt_ratings\nBeautiful Mind, A (2001)\t4.00\t123\nUp (2009)\t4.00\t105\nLord of the Rings: The Two Towers, The (2002)\t4.02\t188\nLéon: The Professional (a.k.a. The Professional) (Léon) (1994)\t4.02\t133\nBraveheart (1995)\t4.03\t237\nBack to the Future (1985)\t4.04\t171\nTrainspotting (1996)\t4.04\t102\nIndiana Jones and the Last Crusade (1989)\t4.05\t140\nAmerican Beauty (1999)\t4.06\t204\nWALL·E (2008)\t4.06\t104\nInception (2010)\t4.07\t143\nGood Will Hunting (1997)\t4.08\t141\nShining, The (1980)\t4.08\t109\nBlade Runner (1982)\t4.10\t124\nFull Metal Jacket (1987)\t4.10\t102\nLord of the Rings: The Fellowship of the Ring, The (2001)\t4.11\t198\nTaxi Driver (1976)\t4.11\t104\nLord of the Rings: The Return of the King, The (2003)\t4.12\t185\nFargo (1996)\t4.12\t181\nMemento (2000)\t4.12\t159\nStar Wars: Episode VI - Return of the Jedi (1983)\t4.14\t196\nSaving Private Ryan (1998)\t4.15\t188\nGreen Mile, The (1999)\t4.15\t111\nForrest Gump (1994)\t4.16\t329\nSilence of the Lambs, The (1991)\t4.16\t279\n"
          },
          {
            "type": "TEXT",
            "data": ""
          }
        ]
      },
      "runtimeInfos": {
        "jobUrl": {
          "propertyName": "jobUrl",
          "label": "SPARK JOB",
          "tooltip": "View in Spark web UI",
          "group": "spark",
          "values": [
            "http://ip-172-31-2-21.ec2.internal:4040/jobs/job?id\u003d192",
            "http://ip-172-31-2-21.ec2.internal:4040/jobs/job?id\u003d193",
            "http://ip-172-31-2-21.ec2.internal:4040/jobs/job?id\u003d194"
          ],
          "interpreterSettingId": "spark"
        }
      },
      "apps": [],
      "jobName": "paragraph_1573161585798_1054325402",
      "id": "20191106-042245_200419154",
      "dateCreated": "2019-11-07 21:19:45.798",
      "dateStarted": "2019-11-12 03:10:27.825",
      "dateFinished": "2019-11-12 03:10:35.084",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%sh\n",
      "user": "anonymous",
      "dateUpdated": "2019-11-12 03:10:35.137",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "sh",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "editorMode": "ace/mode/sh"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "jobName": "paragraph_1573191088991_-765507571",
      "id": "20191108-053128_1591075156",
      "dateCreated": "2019-11-08 05:31:28.991",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    }
  ],
  "name": "demo-zeppelin-nb-02",
  "id": "2EUZKQXX7",
  "noteParams": {},
  "noteForms": {},
  "angularObjects": {
    "md:shared_process": [],
    "sh:shared_process": [],
    "spark:shared_process": []
  },
  "config": {
    "isZeppelinNotebookCronEnable": false
  },
  "info": {}
}